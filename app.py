from config import TOKEN
import telebot as tl
from telebot import types
import random
from data import *
import datetime
from Database.database import create_connection, create_users_table, insert_or_update_user, update_session, check_user_existence, get_user_data, count_users, update_zodiac, create_horoscope_table, update_horoscope_sign
import ast


# @OracleEveryDaybot

database_file = 'sessions.db'
conn = create_connection(database_file)


if conn is not None:
    create_users_table(conn)

use_state = {}
use_state_admin = {}

bot = tl.TeleBot(TOKEN)

def generate_random_numbers():
    random_numbers = random.sample(range(0, 49), 6)
    return random_numbers

def check_user_session(user_id, username):
    if check_user_existence(conn, user_id):
        data_user = get_user_data(conn, user_id)
                
        if data_user and data_user[7]:  
            last_update_datetime = datetime.datetime.strptime(data_user[7], "%Y-%m-%d %H:%M:%S.%f")
            zodiac = None
            if data_user[6]:
                zodiac = data_user[6]
            if last_update_datetime.date() < datetime.datetime.now().date():
                print(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID_telegram {user_id} –Ω–µ –æ–Ω–æ–≤–ª—é–≤–∞–≤—Å—è –ø—Ä–æ—Ç—è–≥–æ–º –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –¥–Ω—è.")
                update_session(
                    conn=conn, 
                    ID_telegram=user_id, 
                    card_taro_id=random.randint(1, 22), 
                    luck_numbers=str(generate_random_numbers()), 
                    zodiac_sign=zodiac, 
                    last_update=datetime.datetime.now())

        print(f"–£ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö: {count_users(conn)} —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")
    else:
        insert_or_update_user(
            conn=conn, 
            ID_telegram=user_id, 
            username=username, 
            first_session_date=datetime.datetime.now(), 
            last_update=datetime.datetime.now())
        update_session(
            conn=conn, 
            ID_telegram=user_id, 
            card_taro_id=random.randint(1, 22), 
            luck_numbers=str(generate_random_numbers()), 
            zodiac_sign=None, 
            last_update=datetime.datetime.now())
        print(f"–£ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö –Ω–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á")    

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    user_id = message.from_user.id
    username = message.from_user.username

    check_user_session(user_id, username)
    
    data_user = get_user_data(conn, user_id)
    try:
        zodiac_sign = data_user[6]
    except:
        zodiac_sign = None
    
    if zodiac_sign == None:
        check_user_session(user_id, username)
        
        markup = types.InlineKeyboardMarkup(row_width=3)

        item1  = types.InlineKeyboardButton('–æ–≤–µ–Ω'      ,callback_data='zodiac_sing_aries')
        item2  = types.InlineKeyboardButton('—Ç–µ–ª–µ—Ü—å'    ,callback_data='zodiac_sing_taurus')
        item3  = types.InlineKeyboardButton('–±–ª–∏–∑–Ω—é–∫–∏'  ,callback_data='zodiac_sing_gemini')
        item4  = types.InlineKeyboardButton('—Ä–∞–∫'       ,callback_data='zodiac_sing_cancer')
        item5  = types.InlineKeyboardButton('–ª–µ–≤'       ,callback_data='zodiac_sing_leo')
        item6  = types.InlineKeyboardButton('–¥—ñ–≤–∞'      ,callback_data='zodiac_sing_virgo')
        item7  = types.InlineKeyboardButton('—Ç–µ—Ä–µ–∑–∏'    ,callback_data='zodiac_sing_libra')
        item8  = types.InlineKeyboardButton('—Å–∫–æ—Ä–ø—ñ–æ–Ω'  ,callback_data='zodiac_sing_scorpio')
        item9  = types.InlineKeyboardButton('—Å—Ç—Ä—ñ–ª–µ—Ü—å'  ,callback_data='zodiac_sing_sagittarius')
        item10 = types.InlineKeyboardButton('–∫–æ–∑–µ—Ä—ñ–≥'   ,callback_data='zodiac_sing_capricorn')
        item11 = types.InlineKeyboardButton('–≤–æ–¥–æ–ª—ñ–π'   ,callback_data='zodiac_sing_aquarius')
        item12 = types.InlineKeyboardButton('—Ä–∏–±–∏'      ,callback_data='zodiac_sing_pisces')

        markup.row(item1, item2, item3, item4)
        markup.row(item5, item6, item7, item8)
        markup.row(item9, item10, item11, item12)

        photo = open('static/image/other/start.jpg', 'rb')
        bot.send_photo(message.chat.id, photo, 
            caption="‚òÄÔ∏èüåô –î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≥–æ—Ä–æ—Å–∫–æ–ø—É –æ–±–µ—Ä—ñ—Ç—å –≤–∞—à –∑–Ω–∞–∫ –∑–æ–¥—ñ–∞–∫—É",
                parse_mode='html',
                    reply_markup=markup)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('‚òÄÔ∏è –ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –Ω–∞ –¥–µ–Ω—å')
        item2 = types.KeyboardButton('üÉè –ü—Ä–æ–π—Ç–∏ –≥–∞–¥–∞–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ')
        item3 = types.KeyboardButton('üíù –°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑–∞ –ó–Ω–∞–∫–æ–º –ó–æ–¥—ñ–∞–∫—É')
        item4 = types.KeyboardButton('üåÖ –°—Ö—ñ–¥–Ω–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø –∑–∞ —Ä–æ–∫–æ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è')
        item5 = types.KeyboardButton('üî¢ –ì–∞–¥–∞–Ω–Ω—è –∑–∞ –º–µ—Ç–æ–¥–æ–º –í–∏–ø–∞–¥–∫–æ–≤–∏—Ö –ß–∏—Å–µ–ª')

        markup.row(item1, item2)
        markup.row(item3, item4)
        markup.row(item5)

        photo = open('static/image/other/start.jpg', 'rb')
        bot.send_photo(message.chat.id, photo, 
            caption="–©–æ –≤–º—ñ—î —Ü–µ–π –±–æ—Ç?\n\n–ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞, –≤–∏ –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –æ–±—Ä–∞–Ω–æ–≥–æ –≤–∞–º–∏ –∑–Ω–∞–∫—É –∑–æ–¥—ñ–∞–∫—É‚ù§Ô∏è\n\n–ê —Ç–∞–∫–æ–∂, –≤ —Å–∞–º–æ–º—É –±–æ—Ç—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è:\n\n<strong>‚òÄÔ∏è –ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –Ω–∞ –¥–µ–Ω—å\nüåÖ –°—Ö—ñ–¥–Ω–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø –∑–∞ —Ä–æ–∫–æ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è\nüíù –°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑–∞ –ó–Ω–∞–∫–æ–º –ó–æ–¥—ñ–∞–∫—É\nüÉè –ü—Ä–æ–π—Ç–∏ –≥–∞–¥–∞–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ\nüî¢ –ì–∞–¥–∞–Ω–Ω—è –∑–∞ –º–µ—Ç–æ–¥–æ–º –í–∏–ø–∞–¥–∫–æ–≤–∏—Ö –ß–∏—Å–µ–ª</strong>",
                parse_mode='html',
                    reply_markup=markup)

@bot.message_handler(content_types=['text'])
def send_message(message):
    if message.chat.type == 'private':
        if message.text == '‚òÄÔ∏è –ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –Ω–∞ –¥–µ–Ω—å':
            user_id = message.from_user.id
            username = message.from_user.username
            check_user_session(user_id, username)
            
            data_user = get_user_data(conn, user_id)
            try:
                zodiac_sign = data_user[6]
            except:
                zodiac_sign = None
            
            if zodiac_sign == None:
                check_user_session(user_id, username)
                
                markup = types.InlineKeyboardMarkup(row_width=3)

                item1  = types.InlineKeyboardButton('–æ–≤–µ–Ω'      ,callback_data='zodiac_sing_aries')
                item2  = types.InlineKeyboardButton('—Ç–µ–ª–µ—Ü—å'    ,callback_data='zodiac_sing_taurus')
                item3  = types.InlineKeyboardButton('–±–ª–∏–∑–Ω—é–∫–∏'  ,callback_data='zodiac_sing_gemini')
                item4  = types.InlineKeyboardButton('—Ä–∞–∫'       ,callback_data='zodiac_sing_cancer')
                item5  = types.InlineKeyboardButton('–ª–µ–≤'       ,callback_data='zodiac_sing_leo')
                item6  = types.InlineKeyboardButton('–¥—ñ–≤–∞'      ,callback_data='zodiac_sing_virgo')
                item7  = types.InlineKeyboardButton('—Ç–µ—Ä–µ–∑–∏'    ,callback_data='zodiac_sing_libra')
                item8  = types.InlineKeyboardButton('—Å–∫–æ—Ä–ø—ñ–æ–Ω'  ,callback_data='zodiac_sing_scorpio')
                item9  = types.InlineKeyboardButton('—Å—Ç—Ä—ñ–ª–µ—Ü—å'  ,callback_data='zodiac_sing_sagittarius')
                item10 = types.InlineKeyboardButton('–∫–æ–∑–µ—Ä—ñ–≥'   ,callback_data='zodiac_sing_capricorn')
                item11 = types.InlineKeyboardButton('–≤–æ–¥–æ–ª—ñ–π'   ,callback_data='zodiac_sing_aquarius')
                item12 = types.InlineKeyboardButton('—Ä–∏–±–∏'      ,callback_data='zodiac_sing_pisces')

                markup.row(item1, item2, item3, item4)
                markup.row(item5, item6, item7, item8)
                markup.row(item9, item10, item11, item12)

                photo = open('static/image/other/start.jpg', 'rb')
                bot.send_photo(message.chat.id, photo, 
                    caption="–ë—É–¥—å –ª–∞—Å–∫–∞ –æ–Ω–æ–≤—ñ—Ç—å –¥–∞–Ω—ñ –≤–∞—à–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø—É\n\n–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π –∑–æ–¥—ñ–∞–∫:",
                        parse_mode='html',
                            reply_markup=markup)
            else:
                data_user = get_user_data(conn, user_id)
                print(data_user)
                user_number = ast.literal_eval(data_user[5])[0]
                user_data = lucky_number[user_number]

                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')
                markup.add(item)
                    
                photo = open('static/image/other/foresight.jpg', 'rb')
                bot.send_photo(message.chat.id, photo, 
                    caption=f"–ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ:\n\n{user_data}",
                        parse_mode='html',
                            reply_markup=markup)
                
        if message.text == 'üåÖ –°—Ö—ñ–¥–Ω–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø –∑–∞ —Ä–æ–∫–æ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è':
            user_id = message.from_user.id
            username = message.from_user.username
            check_user_session(user_id, username)   
            
            markup = types.InlineKeyboardMarkup(row_width=3)

            item1  = types.InlineKeyboardButton('–ú–∏—à–∞',     callback_data="eastern_horoscope_1")
            item2  = types.InlineKeyboardButton('–ë–∏–∫',      callback_data="eastern_horoscope_2")
            item3  = types.InlineKeyboardButton('–¢–∏–≥—Ä',     callback_data="eastern_horoscope_3")
            item4  = types.InlineKeyboardButton('–ö—Ä–æ–ª–∏–∫',   callback_data="eastern_horoscope_4")
            item5  = types.InlineKeyboardButton('–î—Ä–∞–∫–æ–Ω',   callback_data="eastern_horoscope_5")
            item6  = types.InlineKeyboardButton('–ó–º—ñ—è',     callback_data="eastern_horoscope_6")
            item7  = types.InlineKeyboardButton('–ö—ñ–Ω—å',     callback_data="eastern_horoscope_7")
            item8  = types.InlineKeyboardButton('–ö–æ–∑–∞',     callback_data="eastern_horoscope_8")
            item9  = types.InlineKeyboardButton('–ú–∞–≤–ø–∞',    callback_data="eastern_horoscope_9")
            item10 = types.InlineKeyboardButton('–ü—ñ–≤–µ–Ω—å',   callback_data="eastern_horoscope_10")
            item11 = types.InlineKeyboardButton('–°–æ–±–∞–∫–∞',   callback_data="eastern_horoscope_11")
            item12 = types.InlineKeyboardButton('–ö–∞–±–∞–Ω',    callback_data="eastern_horoscope_12")

            markup.row(item1, item2,    item3,  item4)
            markup.row(item5, item6,    item7,  item8)
            markup.row(item9, item10,   item11, item12)

            photo = open('static/image/other/dragon.jpg', 'rb')
            
            bot.send_photo(message.chat.id, photo, 
                caption="üåÖ –°—Ö—ñ–¥–Ω–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø –∑–∞ —Ä–æ–∫–æ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è\n\n<strong>–û–±–µ—Ä—ñ—Ç—å —ñ—Å—Ç–æ—Ç—É –∑–∞ –≤–∞—à–∏–º —Ä–æ–∫–æ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ —Ç–æ—á–Ω–µ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –Ω–∞  2024 —Ä—ñ–∫:</strong>",
                    parse_mode='html',
                        reply_markup=markup)

        if message.text == 'üíù –°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑–∞ –ó–Ω–∞–∫–æ–º –ó–æ–¥—ñ–∞–∫—É':
            user_id = message.from_user.id
            username = message.from_user.username
            check_user_session(user_id, username)


            markup = types.InlineKeyboardMarkup(row_width=3)
            
            item1   = types.InlineKeyboardButton('–û–≤–µ–Ω ‚ôàÔ∏è',      callback_data="compatibility_first_1")
            item2   = types.InlineKeyboardButton('–¢–µ–ª–µ—Ü—å ‚ôâÔ∏è',    callback_data="compatibility_first_2")
            item3   = types.InlineKeyboardButton('–ë–ª–∏–∑–Ω—é–∫–∏ ‚ôäÔ∏è',  callback_data="compatibility_first_3")
            item4   = types.InlineKeyboardButton('–†–∞–∫ ‚ôãÔ∏è',       callback_data="compatibility_first_4")
            item5   = types.InlineKeyboardButton('–õ–µ–≤ ‚ôåÔ∏è',       callback_data="compatibility_first_5")
            item6   = types.InlineKeyboardButton('–î—ñ–≤–∞ ‚ôçÔ∏è',      callback_data="compatibility_first_6")
            item7   = types.InlineKeyboardButton('–¢–µ—Ä–µ–∑–∏ ‚ôéÔ∏è',    callback_data="compatibility_first_7")
            item8   = types.InlineKeyboardButton('–°–∫–æ—Ä–ø—ñ–æ–Ω ‚ôèÔ∏è',  callback_data="compatibility_first_8")
            item9   = types.InlineKeyboardButton('–°—Ç—Ä—ñ–ª–µ—Ü—å ‚ôêÔ∏è',  callback_data="compatibility_first_9")
            item10  = types.InlineKeyboardButton('–ö–æ–∑–µ—Ä—ñ–≥ ‚ôëÔ∏è',   callback_data="compatibility_first_10")
            item11  = types.InlineKeyboardButton('–í–æ–¥–æ–ª—ñ–π ‚ôíÔ∏è',   callback_data="compatibility_first_11")
            item12  = types.InlineKeyboardButton('–†–∏–±–∏ ‚ôìÔ∏è',      callback_data="compatibility_first_12")

            markup.row(item1, item2,    item3,  item4)
            markup.row(item5, item6,    item7,  item8)
            markup.row(item9, item10,   item11, item12)

            photo = open(f'static/image/other/compatibility.jpg', 'rb')
        
            bot.send_photo(message.chat.id, photo, 
                caption="üíï –°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –º—ñ–∂ –¥–≤–æ–º–∞ –∑–Ω–∞–∫–∞–º–∏ –∑–æ–¥—ñ–∞–∫—É\n\nüé≤ –û–±–µ—Ä—ñ—Ç—å –ø–µ—Ä—à–∏–π –∑–Ω–∞–∫ –∑–æ–¥—ñ–∞–∫—É:",
                    parse_mode='html',
                        reply_markup=markup)
        
        if message.text == 'üÉè –ü—Ä–æ–π—Ç–∏ –≥–∞–¥–∞–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ':
            user_id = message.from_user.id
            username = message.from_user.username
            
            check_user_session(user_id, username)
            data_user = get_user_data(conn, user_id)
            try:
                zodiac_sign = data_user[6]
            except:
                zodiac_sign = None
            
            if zodiac_sign == None:
                check_user_session(user_id, username)
                
                markup = types.InlineKeyboardMarkup(row_width=3)

                item1  = types.InlineKeyboardButton('–æ–≤–µ–Ω'      ,callback_data='zodiac_sing_aries')
                item2  = types.InlineKeyboardButton('—Ç–µ–ª–µ—Ü—å'    ,callback_data='zodiac_sing_taurus')
                item3  = types.InlineKeyboardButton('–±–ª–∏–∑–Ω—é–∫–∏'  ,callback_data='zodiac_sing_gemini')
                item4  = types.InlineKeyboardButton('—Ä–∞–∫'       ,callback_data='zodiac_sing_cancer')
                item5  = types.InlineKeyboardButton('–ª–µ–≤'       ,callback_data='zodiac_sing_leo')
                item6  = types.InlineKeyboardButton('–¥—ñ–≤–∞'      ,callback_data='zodiac_sing_virgo')
                item7  = types.InlineKeyboardButton('—Ç–µ—Ä–µ–∑–∏'    ,callback_data='zodiac_sing_libra')
                item8  = types.InlineKeyboardButton('—Å–∫–æ—Ä–ø—ñ–æ–Ω'  ,callback_data='zodiac_sing_scorpio')
                item9  = types.InlineKeyboardButton('—Å—Ç—Ä—ñ–ª–µ—Ü—å'  ,callback_data='zodiac_sing_sagittarius')
                item10 = types.InlineKeyboardButton('–∫–æ–∑–µ—Ä—ñ–≥'   ,callback_data='zodiac_sing_capricorn')
                item11 = types.InlineKeyboardButton('–≤–æ–¥–æ–ª—ñ–π'   ,callback_data='zodiac_sing_aquarius')
                item12 = types.InlineKeyboardButton('—Ä–∏–±–∏'      ,callback_data='zodiac_sing_pisces')

                markup.row(item1, item2, item3, item4)
                markup.row(item5, item6, item7, item8)
                markup.row(item9, item10, item11, item12)

                photo = open('static/image/other/start.jpg', 'rb')
                bot.send_photo(message.chat.id, photo, 
                    caption="–ë—É–¥—å –ª–∞—Å–∫–∞ –æ–Ω–æ–≤—ñ—Ç—å –¥–∞–Ω—ñ –≤–∞—à–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø—É\n\n–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π –∑–æ–¥—ñ–∞–∫:",
                        parse_mode='html',
                            reply_markup=markup)
                
            else:
                rd = random.randint(1, 4)
                markup = types.InlineKeyboardMarkup(row_width=3)
                
                item1  = types.InlineKeyboardButton('1Ô∏è‚É£',   callback_data="card_taro_1")
                item2  = types.InlineKeyboardButton('2Ô∏è‚É£',   callback_data="card_taro_2")
                item3  = types.InlineKeyboardButton('3Ô∏è‚É£',   callback_data="card_taro_3")
                item4  = types.InlineKeyboardButton('4Ô∏è‚É£',   callback_data="card_taro_4")
                item5  = types.InlineKeyboardButton('5Ô∏è‚É£',   callback_data="card_taro_5")
                item6  = types.InlineKeyboardButton('6Ô∏è‚É£',   callback_data="card_taro_6")
                item7  = types.InlineKeyboardButton('7Ô∏è‚É£',   callback_data="card_taro_7")
                item8  = types.InlineKeyboardButton('8Ô∏è‚É£',   callback_data="card_taro_8")

                markup.row(item1, item2,    item3,  item4)
                markup.row(item5, item6,    item7,  item8)

                photo = open(f'static/image/TARO/pre_taro_{rd}.jpg', 'rb')
            
                bot.send_photo(message.chat.id, photo, 
                    caption="–ì–∞–¥–∞–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ –º–æ–∂–Ω–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ 1 —Ä–∞–∑ –Ω–∞ –¥–µ–Ω—å‚ÄºÔ∏è\n\nüÉè –û–±–µ—Ä—ñ—Ç—å –∫–∞—Ä—Ç—É, —è–∫–∞ –≤–∞–º –Ω–∞–π–±—ñ–ª—å—à–µ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è:",
                        parse_mode='html',
                            reply_markup=markup)
            
            
        
        if message.text == 'üî¢ –ì–∞–¥–∞–Ω–Ω—è –∑–∞ –º–µ—Ç–æ–¥–æ–º –í–∏–ø–∞–¥–∫–æ–≤–∏—Ö –ß–∏—Å–µ–ª':
            user_id = message.from_user.id
            username = message.from_user.username
            
            check_user_session(user_id, username)

            data_user = get_user_data(conn, user_id)
            user_luck_number = ast.literal_eval(data_user[5])

            markup = types.InlineKeyboardMarkup(row_width=3)
            
            item1  = types.InlineKeyboardButton(user_luck_number[0],   callback_data="luck_number_1")
            item2  = types.InlineKeyboardButton(user_luck_number[1],   callback_data="luck_number_2")
            item3  = types.InlineKeyboardButton(user_luck_number[2],   callback_data="luck_number_3")
            item4  = types.InlineKeyboardButton(user_luck_number[3],   callback_data="luck_number_4")
            item5  = types.InlineKeyboardButton(user_luck_number[4],   callback_data="luck_number_5")
            item6  = types.InlineKeyboardButton(user_luck_number[5],   callback_data="luck_number_6")

            markup.row(item1, item2, item3, item4, item5, item6)

            photo = open(f'static/image/other/luck_number.jpg', 'rb')
        
            bot.send_photo(message.chat.id, photo, 
                caption=f"üí´–û–±–µ—Ä—ñ—Ç—å –≤–∞—à–µ —â–∞—Å–ª–∏–≤–µ —á–∏—Å–ª–æ!\n–í–∞—à—ñ —á–∏—Å–ª–∞ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ:   <strong>{user_luck_number[0]}   {user_luck_number[1]}   {user_luck_number[2]}   {user_luck_number[3]}   {user_luck_number[4]}   {user_luck_number[5]}</strong>\n\n–û–±–µ—Ä—ñ—Ç—å —á–∏—Å–ª–æ –∑—ñ —Å–ø–∏—Å–∫—É —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –¥–ª—è –≤–∞—Å:",
                    parse_mode='html',
                        reply_markup=markup)
        
        if message.text == '‚úÖ –£ –º–µ–Ω—é':
            user_id = message.from_user.id
            username = message.from_user.username
            check_user_session(user_id, username)
            
            
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('‚òÄÔ∏è –ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –Ω–∞ –¥–µ–Ω—å')
            item2 = types.KeyboardButton('üÉè –ü—Ä–æ–π—Ç–∏ –≥–∞–¥–∞–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ')
            item3 = types.KeyboardButton('üíù –°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑–∞ –ó–Ω–∞–∫–æ–º –ó–æ–¥—ñ–∞–∫—É')
            item4 = types.KeyboardButton('üåÖ –°—Ö—ñ–¥–Ω–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø –∑–∞ —Ä–æ–∫–æ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è')
            item5 = types.KeyboardButton('üî¢ –ì–∞–¥–∞–Ω–Ω—è –∑–∞ –º–µ—Ç–æ–¥–æ–º –í–∏–ø–∞–¥–∫–æ–≤–∏—Ö –ß–∏—Å–µ–ª')

            markup.row(item1, item2)
            markup.row(item3, item4)
            markup.row(item5)

            bot.send_message(message.chat.id, 
                text="–©–æ –≤–º—ñ—î —Ü–µ–π –±–æ—Ç?\n\n–ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞, –≤–∏ –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –æ–±—Ä–∞–Ω–æ–≥–æ –≤–∞–º–∏ –∑–Ω–∞–∫—É –∑–æ–¥—ñ–∞–∫—É‚ù§Ô∏è\n\n–ê —Ç–∞–∫–æ–∂, –≤ —Å–∞–º–æ–º—É –±–æ—Ç—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è:\n\n<strong>‚òÄÔ∏è –ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –Ω–∞ –¥–µ–Ω—å\nüåÖ –°—Ö—ñ–¥–Ω–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø –∑–∞ —Ä–æ–∫–æ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è\nüíù –°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑–∞ –ó–Ω–∞–∫–æ–º –ó–æ–¥—ñ–∞–∫—É\nüÉè –ü—Ä–æ–π—Ç–∏ –≥–∞–¥–∞–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ\nüî¢ –ì–∞–¥–∞–Ω–Ω—è –∑–∞ –º–µ—Ç–æ–¥–æ–º –í–∏–ø–∞–¥–∫–æ–≤–∏—Ö –ß–∏—Å–µ–ª</strong>",
                    parse_mode='html',
                        reply_markup=markup)


        if message.text == '/admin':
            user_id = message.from_user.id
            username = message.from_user.username
            check_user_session(user_id, username)
            
            if use_state.get(user_id):
                if use_state[user_id] == "login_success":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç–∏ / –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≥–æ—Ä–æ—Å–∫–æ–ø—É')
                    item2 = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')

                    markup.row(item1)
                    markup.row(item2)
                    
                    bot.send_message(message.chat.id, text="–í—ñ—Ç–∞—î–º–æ –≤ –∞–¥–º—ñ–Ω —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—ñ!", parse_mode='html', reply_markup=markup)

            else:
                use_state[user_id] = "waiting_to_input_password"
                bot.send_message(message.chat.id, text="–í–≤–µ–¥—ñ—Ç—å password:", parse_mode='html')

        if use_state.get(message.from_user.id):
            user_id = message.from_user.id
            username = message.from_user.username
            check_user_session(user_id, username)

            if use_state[user_id] == "waiting_to_input_password":
                password_user = message.text
                if password_user == 'qwer1234':
                    use_state[user_id] = "login_success"
                    
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç–∏ / –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≥–æ—Ä–æ—Å–∫–æ–ø—É')
                    item2 = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')
                    markup.row(item1)
                    markup.row(item2)
                    
                    bot.send_message(message.chat.id, text="–í—ñ—Ç–∞—î–º–æ –≤ –∞–¥–º—ñ–Ω —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—ñ!", parse_mode='html', reply_markup=markup)

            if use_state[user_id] == "login_success":
                if use_state_admin.get(user_id): 
                    if use_state_admin[user_id]['status'] == "waiting_to_input_date":
                        
                        date = message.text
                        
                        is_table = create_horoscope_table(conn, date)
                        if is_table:
                            use_state_admin[user_id] = { 'status': 'waiting_to_input_zodiac', 'date':  date}
                            
                            markup = types.InlineKeyboardMarkup(row_width=3)
                    
                            item1   = types.InlineKeyboardButton('–û–≤–µ–Ω ‚ôàÔ∏è',      callback_data="adminInput_zodiac_1")
                            item2   = types.InlineKeyboardButton('–¢–µ–ª–µ—Ü—å ‚ôâÔ∏è',    callback_data="adminInput_zodiac_2")
                            item3   = types.InlineKeyboardButton('–ë–ª–∏–∑–Ω—é–∫–∏ ‚ôäÔ∏è',  callback_data="adminInput_zodiac_3")
                            item4   = types.InlineKeyboardButton('–†–∞–∫ ‚ôãÔ∏è',       callback_data="adminInput_zodiac_4")
                            item5   = types.InlineKeyboardButton('–õ–µ–≤ ‚ôåÔ∏è',       callback_data="adminInput_zodiac_5")
                            item6   = types.InlineKeyboardButton('–î—ñ–≤–∞ ‚ôçÔ∏è',      callback_data="adminInput_zodiac_6")
                            item7   = types.InlineKeyboardButton('–¢–µ—Ä–µ–∑–∏ ‚ôéÔ∏è',    callback_data="adminInput_zodiac_7")
                            item8   = types.InlineKeyboardButton('–°–∫–æ—Ä–ø—ñ–æ–Ω ‚ôèÔ∏è',  callback_data="adminInput_zodiac_8")
                            item9   = types.InlineKeyboardButton('–°—Ç—Ä—ñ–ª–µ—Ü—å ‚ôêÔ∏è',  callback_data="adminInput_zodiac_9")
                            item10  = types.InlineKeyboardButton('–ö–æ–∑–µ—Ä—ñ–≥ ‚ôëÔ∏è',   callback_data="adminInput_zodiac_10")
                            item11  = types.InlineKeyboardButton('–í–æ–¥–æ–ª—ñ–π ‚ôíÔ∏è',   callback_data="adminInput_zodiac_11")
                            item12  = types.InlineKeyboardButton('–†–∏–±–∏ ‚ôìÔ∏è',      callback_data="adminInput_zodiac_12")

                            markup.row(item1, item2,    item3,  item4)
                            markup.row(item5, item6,    item7,  item8)
                            markup.row(item9, item10,   item11, item12)
                    
                            bot.send_message(user_id, 
                                            text=f"–í–∏ –≤–≤–µ–ª–∏ –¥–∞—Ç—É - <strong>{use_state_admin[user_id]['date']}</strong>.\n\n–¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å –∑–æ–¥—ñ–∞–∫, —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –¥–æ–¥–∞—Ç–∏/—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏:", 
                                            parse_mode='html', reply_markup=markup)
                        else:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                            item1 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç–∏ / –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≥–æ—Ä–æ—Å–∫–æ–ø—É')
                            item2 = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')
                            markup.row(item1)
                            markup.row(item2)
                            
                            bot.send_message(user_id, 
                                            text=f"–í–≤–µ–¥–µ–Ω–∞ –¥–∞—Ç–∞ - {use_state_admin[user_id]['date']} –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∞.", 
                                            parse_mode='html', reply_markup=markup)
                        
                    if use_state_admin[user_id]['status'] == "waiting_to_input_zodiac_text":
                        text = message.text
                        
                        is_new_record = update_horoscope_sign(
                            conn=conn, 
                            date_to_record=use_state_admin[user_id]['date'],
                            zodiac_sign=use_state_admin[user_id]['zodiac'],
                            prediction=text
                        )
                        use_state_admin[user_id]['status'] = None
                        
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç–∏ / –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≥–æ—Ä–æ—Å–∫–æ–ø—É')
                        item2 = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')
                        markup.row(item1)
                        markup.row(item2)
                            
                        if is_new_record:
                            bot.send_message(user_id, 
                                                text=f"‚úÖ –î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ.", 
                                                parse_mode='html', reply_markup=markup)
                        else:
                            bot.send_message(user_id, 
                                                text=f"‚ùå –î–∞–Ω—ñ –Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–º–∏–ª–∞ –∑–∞–ø–∏—Å—É.", 
                                                parse_mode='html', reply_markup=markup)
                        
                        
                        
            if message.text == "–ó–∞–ø–∏—Å–∞—Ç–∏ / –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≥–æ—Ä–æ—Å–∫–æ–ø—É":
                user_id = message.from_user.id
                username = message.from_user.username
                check_user_session(user_id, username)

                if use_state.get(user_id) == "login_success":
                    use_state_admin[user_id] = {'status': 'waiting_to_input_date'}
                    bot.send_message(user_id, text="–ù–∞–ø–∏—à—ñ—Ç—å –¥–∞—Ç—É –¥–Ω—è, —è–∫–∏–π —Ö–æ—á–µ—Ç–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ / —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏:\n\n–ø–∏—Å–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ —É —Ñ–æ—Ä–º–∞—Ç—ñ - 10.12.2023")
        

      



@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data.find('eastern_horoscope') != -1:
                
                index = int(call.data.split('_')[2])
                    
                
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')
                markup.add(item)
                
                photo = open(f'static/image/eastern_horoscope/{index}.jpg', 'rb')
                bot.send_photo(call.message.chat.id, photo, 
                    caption=f"{eastern_horoscope[index - 1]}",
                        parse_mode='html',
                            reply_markup=markup)

            if call.data.find('card_taro') != -1:
                user_id = call.from_user.id
                username = call.from_user.username

                check_user_session(user_id, username)
                data_user = get_user_data(conn, user_id)
                card_id = data_user[4]

                caption = f"–í–∞—à–∞ –∫–∞—Ä—Ç–∞ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ - ‚Ññ<strong>{card_id}</strong>\n\n{cards_taro_text[card_id - 1]}"

                text_length = len(caption)
                max_caption_length = 1000

                if text_length > max_caption_length:
                    chunks = [caption[i:i + max_caption_length] for i in range(0, text_length, max_caption_length)]
                else:
                    chunks = [caption]

                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')
                markup.add(item)

                for i, chunk in enumerate(chunks):
                    parse_mode = 'html' if i == 0 else None

                    if i == 0:
                        photo = open(f'static/image/TARO/{card_id}.jpg', 'rb')
                        bot.send_photo(call.message.chat.id, photo, caption=chunk, parse_mode=parse_mode, reply_markup=markup)
                    else:
                        bot.send_message(call.message.chat.id, text=chunk, parse_mode=parse_mode, reply_markup=markup)




            if call.data.find('luck_number') != -1:
                index = int(call.data.split('_')[2])
                
                user_id = call.from_user.id
                username = call.from_user.username
                
                check_user_session(user_id, username)

                data_user = get_user_data(conn, user_id)
                user_luck_number = ast.literal_eval(data_user[5])
                
                number = user_luck_number[index - 1]
                
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')
                markup.add(item)
                
                bot.send_message(
                    call.message.chat.id,
                        text=f"üîÆ –í–∞—à–µ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è...\n\n{lucky_number[number]}",
                            parse_mode='html',
                                reply_markup=markup)
                
                 
            if call.data.find('zodiac_sing') != -1:
                user_id = call.from_user.id
                
                who = call.data.split('_')[2]
                print(who)
                update_zodiac(conn, user_id, who)

                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')
                markup.add(item)
                
                bot.send_message(
                    call.message.chat.id,
                        text=f"–¢–µ–ø–µ—Ä –≤–∞—à –∑–Ω–∞–∫ - <strong>{who}</strong>\n\n–ù–∞–∂–º—ñ—Ç—å ‚úÖ –£ –º–µ–Ω—é –¥–ª—è –æ–∑–Ω–∞–π–æ–º–ª–µ–Ω–Ω—è –∑ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞",
                            parse_mode='html',
                                reply_markup=markup)
                
                
            if call.data.find('compatibility_first') != -1:
                global index_first
                index_first = int(call.data.split('_')[2])

                user_id = call.from_user.id
                username = call.from_user.username
                check_user_session(user_id, username)


                markup = types.InlineKeyboardMarkup(row_width=3)
                
                item1   = types.InlineKeyboardButton('–û–≤–µ–Ω ‚ôàÔ∏è',      callback_data="compatibility_second_1")
                item2   = types.InlineKeyboardButton('–¢–µ–ª–µ—Ü—å ‚ôâÔ∏è',    callback_data="compatibility_second_2")
                item3   = types.InlineKeyboardButton('–ë–ª–∏–∑–Ω—é–∫–∏ ‚ôäÔ∏è',  callback_data="compatibility_second_3")
                item4   = types.InlineKeyboardButton('–†–∞–∫ ‚ôãÔ∏è',       callback_data="compatibility_second_4")
                item5   = types.InlineKeyboardButton('–õ–µ–≤ ‚ôåÔ∏è',       callback_data="compatibility_second_5")
                item6   = types.InlineKeyboardButton('–î—ñ–≤–∞ ‚ôçÔ∏è',      callback_data="compatibility_second_6")
                item7   = types.InlineKeyboardButton('–¢–µ—Ä–µ–∑–∏ ‚ôéÔ∏è',    callback_data="compatibility_second_7")
                item8   = types.InlineKeyboardButton('–°–∫–æ—Ä–ø—ñ–æ–Ω ‚ôèÔ∏è',  callback_data="compatibility_second_8")
                item9   = types.InlineKeyboardButton('–°—Ç—Ä—ñ–ª–µ—Ü—å ‚ôêÔ∏è',  callback_data="compatibility_second_9")
                item10  = types.InlineKeyboardButton('–ö–æ–∑–µ—Ä—ñ–≥ ‚ôëÔ∏è',   callback_data="compatibility_second_10")
                item11  = types.InlineKeyboardButton('–í–æ–¥–æ–ª—ñ–π ‚ôíÔ∏è',   callback_data="compatibility_second_11")
                item12  = types.InlineKeyboardButton('–†–∏–±–∏ ‚ôìÔ∏è',      callback_data="compatibility_second_12")

                markup.row(item1, item2,    item3,  item4)
                markup.row(item5, item6,    item7,  item8)
                markup.row(item9, item10,   item11, item12)

                photo = open(f'static/image/other/compatibility.jpg', 'rb')
            
                bot.send_photo(call.message.chat.id, photo, 
                    caption="üíï –°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –º—ñ–∂ –¥–≤–æ–º–∞ –∑–Ω–∞–∫–∞–º–∏ –∑–æ–¥—ñ–∞–∫—É\n\nüé≤ –û–±–µ—Ä—ñ—Ç—å –¥—Ä—É–≥–∏–π –∑–Ω–∞–∫ –∑–æ–¥—ñ–∞–∫—É:",
                        parse_mode='html',
                            reply_markup=markup)

            if call.data.find('compatibility_second') != -1:
                global index_second
                index_second = int(call.data.split('_')[2])

                your_compatibility = compatibility[index_first - 1][index_second - 1]
                
                photo = open(f'static/image/other/compatibility_result.jpg', 'rb')
            
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item = types.KeyboardButton('‚úÖ –£ –º–µ–Ω—é')
                markup.add(item)
                
                bot.send_photo(call.message.chat.id, photo, 
                    caption=your_compatibility,
                        parse_mode='html',
                            reply_markup=markup)
                
                
            if call.data.find('adminInput_zodiac') != -1:
                user_id = call.from_user.id
                username = call.from_user.username
                check_user_session(user_id, username)
                if use_state[user_id] == "login_success":
                    if use_state_admin.get(user_id): 
                        if use_state_admin[user_id]['status'] == "waiting_to_input_zodiac":
                            index = int(call.data.split('_')[2])
                            zodiac = all_zodiac[index - 1]

                            use_state_admin[user_id] = { 
                                'status': 'waiting_to_input_zodiac_text',
                                'date': use_state_admin[user_id]['date'],
                                'zodiac': zodiac
                            }
                            
                            bot.send_message(call.message.chat.id, 
                                text=f"–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∑–æ–¥—ñ–∞–∫—É -  {zodiac} \n–î–ª—è –¥–∞—Ç–∏ - {use_state_admin[user_id]['date']} :",
                                    parse_mode='html')
                
                    
    except Exception as e:
        print(repr(e))
        



if __name__ == "__main__":
    bot.infinity_polling()
